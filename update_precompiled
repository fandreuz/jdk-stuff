#! /bin/bash

MIN_MS="$1"
PRECOMPILED_HPP="src/hotspot/share/precompiled/precompiled.hpp"
CBA_CONFIG="ClangBuildAnalyzer.ini"

TIMESTAMP="$(date +%Y%m%d)"
RUN_NAME="pch_update_$TIMESTAMP"
CBA_OUTPUT="cba_out_$TIMESTAMP"

sh configure --with-toolchain-type=clang \
             --with-conf-name="$RUN_NAME" \
             --with-extra-cxxflags="-ftime-trace" \
             --with-extra-cflags="-ftime-trace"
make -j hotspot CONF_NAME="$RUN_NAME"
./ClangBuildAnalyzer/build/ClangBuildAnalyzer \
  --all "./build/$RUN_NAME/hotspot/variant-server/libjvm/objs" \
  "$CBA_OUTPUT"

# Preserve comments on top
cat "$PRECOMPILED_HPP" | awk '/^#include/ {exit} {print}' > "$PRECOMPILED_HPP.tmp"

cat <<EOF > "$CBA_CONFIG"
[counts]
header=100
headerChain=0
template=0
function=0
fileCodegen=0
fileParse=0

[misc]
onlyRootHeaders=true
EOF

./ClangBuildAnalyzer/build/ClangBuildAnalyzer --analyze "$CBA_OUTPUT" | \
  grep " ms: " | \
  # Keep the headers more expensive than ${1}ms
  awk -v x="$MIN_MS" '$1 < x { exit } { print }' | \
  # Extract the header
  awk '{print $3}' | \
  # Filter away non-hotspot headers
  grep hotspot/share | \
  sort | \
  awk -F "hotspot/share/" '{ printf "#include \"%s\"\n", $2 }' \
  >> "$PRECOMPILED_HPP.tmp"
mv "$PRECOMPILED_HPP.tmp" "$PRECOMPILED_HPP"
